<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Visual Studio中scanf返回值被忽略</title>
    <link href="/posts/20220225a1/"/>
    <url>/posts/20220225a1/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>转存自我之前在CSDN上的写一篇原创博文</p><p>原文地址：<a href="https://blog.csdn.net/mxy3538/article/details/113181661">https://blog.csdn.net/mxy3538/article/details/113181661</a></p>          </div><p>昨天在使用Visual Studio 2019编写C语言程序时遇到了：<strong>scanf返回值被忽略问题</strong></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250020174.png"></p><blockquote><p>因为我也是刚开始使用VS2019学习C语言，第一次遇到这种问题，也不知道怎么回事，然后就上Chrome研究了一番，才知道原因，并且找到了几种分散在个个角落的解决方法，我在这里<strong>归纳总结</strong>一下。</p></blockquote><h1 id="1、问题原因"><a href="#1、问题原因" class="headerlink" title="1、问题原因"></a>1、问题原因</h1><p>在ANSI C中只有scanf()，没有scanf_s()，但是scanf()在读取时不检查边界，所以可能会造成内存泄漏。于是Microsoft公司在VS编译器中提供了scanf_s()。</p><h1 id="2、解决方法"><a href="#2、解决方法" class="headerlink" title="2、解决方法"></a>2、解决方法</h1><p>如果想继续使用scanf这个不安全的函数，可以通过以下几种方法解决。</p><h2 id="方法①"><a href="#方法①" class="headerlink" title="方法①"></a>方法①</h2><p><span  style="color: #FF0033; ">把<code>scanf</code>直接改成：<code>scanf_s</code></span></p><p>是VS编译器特有，既然觉得scanf()不安全，那它就自己定义了一个scanf_s()。</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250034887.png"></p><h2 id="方法②"><a href="#方法②" class="headerlink" title="方法②"></a>方法②</h2><p><span  style="color: #FF0033; ">编译器错误提示的原因至于VS中的SDL检查，只需要找到它并关闭就可以了。</span></p><p>关闭步骤：右键“项目文件” ——&gt; “属性” ——&gt; “配置属性” ——&gt;“C/C++”——&gt;“常规”——&gt;“SDL检查”改为“否”即可，如图所示</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250036332.png"></p><p>改为否后，再次编译就没问题了。</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250036216.png"></p><h2 id="方法③"><a href="#方法③" class="headerlink" title="方法③"></a>方法③</h2><p><span  style="color: #FF0033; ">在C语言程序开头添加代码：<code>#pragma warning(disable:4996)</code></span></p><blockquote><p>//全部关掉</p></blockquote><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250039559.png"></p><p>或者是：</p><p><span  style="color: #FF0033; ">在C语言程序开头添加代码：<code>#pragma warning(once:4996)</code></span></p><blockquote><p>//仅显示一个</p></blockquote><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250039663.png"></p><h2 id="方法④"><a href="#方法④" class="headerlink" title="方法④"></a>方法④</h2><p><span  style="color: #FF0033; ">在C语言程序开头添加代码：<code>#define _CRT_SECURE_NO_WARNINGS</code></span></p><blockquote><p>//忽略安全检测</p></blockquote><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250041576.png"></p><p>难道每次都要加这么一串代码的吗？那岂不是很费力、麻烦？？<del>（我一开始找到这种方法的时候第一感觉也是这样的）</del></p><p>其实不用那么麻烦，我们只需要在VS中加入 <strong><code>_CRT_SECURE_NO_WARNINGS</code></strong> 这个宏就可以了，具体操作如下图所示：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/006/202202250043345.png"></p><p><em>我个人也是偏向于最后这第④种方法</em>，一次搞定，后面都不用再弄了！</p>]]></content>
    
    
    <categories>
      
      <category>软件使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>Visual Studio</tag>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio自定义APK的相关信息</title>
    <link href="/posts/20220219a2/"/>
    <url>/posts/20220219a2/</url>
    
    <content type="html"><![CDATA[<h1 id="1、apk文件名的修改"><a href="#1、apk文件名的修改" class="headerlink" title="1、apk文件名的修改"></a>1、apk文件名的修改</h1><p>Android studio默认生成的.apk文件名实在是太没有辨识度了，一般默认是<code>app-debug.apk</code>和<code>app-release.apk</code>这样的命名，真的不方便管理。</p><blockquote><p>我现在格式是这样的<br><code>所属项目_构建类型_应用版本_构建日期_构建时间</code><br>如：<img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200028964.png"></p></blockquote><p>我这里使用Gradle配置文件来修改默认命名格式以便更直观管理：</p><p>（1）在AS切换到<strong>Project</strong>目录下，找到<strong>app</strong>路径下的<strong>build.gradle</strong>文件；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200004930.png"></p><p>（2）先在<span  style="color: #FF0033; "><strong>android { …}</strong></span>节点外面加上下面的函数，作用是获取构建时间；</p><figure class="highlight java"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//获取构建时间</span><br><span class="hljs-function">def <span class="hljs-title">generateTime</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Date().format(<span class="hljs-string">&quot;yyyy-MM-dd_HH-mm&quot;</span>)<br></code></pre></td></tr></table></figure><div class="note note-secondary">            <p>代码中<code>yyyy-MM-dd_HH-mm</code>对应<code>年-月-日_时-分</code></p>          </div><p><img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200015037.png"></p><p>（3）再在<span  style="color: #FF0033; "><strong>android { …}</strong></span>节点里面加上下面一段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 自定义打包名称</span><br>android.applicationVariants.all &#123; variant -&gt;<br>    variant.outputs.all &#123;<br>        outputFileName = <span class="hljs-string">&quot;HelloWorld_$&#123;buildType.name&#125;_v$&#123;versionName&#125;_$&#123;generateTime()&#125;.apk&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><div class="note note-secondary">            <ul><li>HelloWorld：自定义（建议与项目有明显相关联）</li><li>${buildType.name}：当前构建类型（debug或release）</li><li>${versionName}：当前版本号</li><li>${generateTime()}：当前日期和时间</li></ul>          </div><p><img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200017770.png"></p><p>这样设置后，打包生成apk文件名可能有点长，不过你就能从这个apk的名字就能很直观的了解到很多信息：<strong>所属项目、构建类型、应用版本、构建日期时间</strong>。</p><p>这样你在自己测试管理或者发生给别人的时候就少了很多不必要的麻烦，降低扯皮和撕逼的概率。而你只需要简单配置一下即可，何乐而不为呢？</p><h1 id="2、APP版本号的修改"><a href="#2、APP版本号的修改" class="headerlink" title="2、APP版本号的修改"></a>2、APP版本号的修改</h1><p>在<strong>build.gradle</strong>中直接修改，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200053768.png"></p><div class="note note-secondary">            <p><strong>VersionCode</strong>：对消费者不可见，仅用于应用市场、程序内部识别版本，判断新旧等用途。<br><strong>VersionName</strong>：展示给消费者，消费者会通过它认知自己安装的版本。一般我们说的版本号就是指这个。</p>          </div><details black=""><summary>点击此处 可展开查看Android版本号和版本名称的重要性介绍：</summary><div class="content"><p><p><p>版本控制对于发布新版本和开发中的版本维护有着关键性的作用，版本控制之所以重要的原因如下：</p><p><span  style="color: #009999; ">（1）用户在安装APP的时候需要知道详细的版本信息，并且在对已有版本进行升级的时候，能否正确安装新版本都和版本控制有关。</span></p><p>    比如：当手机中安装APP的versionCode=1，升级更新的版本号是2（versionCode=2），此时APP可以正常安装更新。反之，如果手机中当前APP版本号是2，升级的或者从其他渠道获取的同一APP的版本号为1，此时替换安装就会失败。</p><p>    这种情况就是说，同一个APP低版本是不能直接覆盖安装手机中已存在的高版本应用（通过版本号(versionCode)来判断）。    这样就给我们在应用升级维护过程中，提高了软件的可维护性和安全性。</p><p><span  style="color: #009999; ">（2）对于其他应用想要搜索或者调用指定版本号和版本名称的应用来说，有了可靠的保证。</span></p><p>    当我们发布在市场上有多个版本的APP的时候，比如不同版本对应不同型号的终端，这时我们可以通过版本控制来找到适合的APP。</p><p><span  style="color: #009999; ">（3）对于我们自己的版本更新系统或者第三方的APP市场，也通过版本号和版本名称来找到和用户终端设备或者终端应用相匹配的APP展示给用户。对于第三方APP市场来说，这个  版本更为关键的是，决定对用户下载下来之后的兼容性判断起到一定管控作用。</span></p><p>    所以版本控制不能忽视，我们可以通过有效的版本控制来管控我们发布到市场的应用，以便得到更好的用户体验。</p><p>&nbsp;</p><p>怎么去设置你的应用的版本号和版本名称，下面做一个简单的介绍。</p><ul><li><p><strong>VersionCode</strong> -------  根据上面的描述，版本号(versioncode)﻿是相对比较重要的一个属性。versionCode是一个Integer类型的值。所以大家在设置的时候，不要将versionCode设置的太大，最好不要超过Integer的取值范围（当然一般也是不会超过的），一般大家在发布自己的第一个应用到市场的时候，版本取值为1（versionCode=1），这也是目前典型和普遍的做法。</p><p>然后，每次发布更新版本时可以递增versionCode的值。上面描述版本控制重要性时也描述过，一个新版本的应用的versionCode不能小于之前旧版本的versionCode值，否则进行替换更新升级时会出错，系统提示无法安装。当然，这也不是强制的，只是正式发布应用时，建议必须考虑的问题。</p></li></ul><ul><li><strong>VersionName</strong> ------ 这是一个值为String类型的属性，一般和VersionCode成对出现。VersionCode是方便程序开发者运行和维护Application而设置的一个有效的值。versionName是一个版本的描述，给用户看的，也是用户放在各个第3方平台上提供给使用者看的一个版本名，可以说是对VersionCode的解释和描述。一般格式可以为：1.1.2（major.minor.point）的形式。</li></ul><p>下面是一个Manifest.xml文件样例：<img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200111726.png" referrerpolicy="no-referrer"></p><p>以上代码表示当前.apk是第二个版本，通过versionName值1.1可以看出此版本是在1.0版本上的一个优化改造版本，区别和1.0版本不大。</p><p>如果是一个UI风格或者业务逻辑有较大调整的应用，版本一般会升一个级别，比如应该定义为2.0。</p><p>————上述内容摘自：<a href='http://blog.csdn.net/y150481863/article/details/41249159'>CSDN博主：两片树叶</a></p></p></p></div></details><h1 id="3、APP应用名的修改"><a href="#3、APP应用名的修改" class="headerlink" title="3、APP应用名的修改"></a>3、APP应用名的修改</h1><p>直接在文件<strong>AndroidManifest.xml</strong>中的<strong>android:label=”@string/app_name”</strong>去修改即可，直接修改替换掉<strong>app_name</strong>即可，中、英文都是可以的；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200038744.png"></p><h1 id="4、APP图标的修改"><a href="#4、APP图标的修改" class="headerlink" title="4、APP图标的修改"></a>4、APP图标的修改</h1><p><strong>AndroidMenifest.xml</strong>中指定了该APP的图标：android:icon=”@mipmap/ic_launcher”，</p><p><strong>“mipmap/ic_launcher”</strong>对应了“Project/app/src/main/res”中的多个以<strong>“mipmap”</strong>开头的文件夹，如图，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/005/202202200044848.png"></p><blockquote><p>hdpi、mdpi、xhdpi、xxhdpi和xxxhdpi的区别：</p><p>以上五个文件夹对应了不同屏幕密度下使用的图标。屏幕密度简称DPI，其全称为“Dots Per Inch”，表示“每英寸的像素点”，该值越大显示的图标则越清晰。</p><p>anydpi-v26  待整理；</p><p>hdpi表示屏幕密度是160；</p><p>hdpi表示屏幕密度是240；</p><p>xhdpi表示屏幕密度是320；</p><p>xxhdpi表示屏幕密度是480；</p><p>xxxhdpi表示屏幕密度是640。</p><p>不同文件夹下，保存了不同屏幕密度的图标。</p></blockquote><p><span  style="color: #009999; "><strong>推荐使用AS自带的Image Asset工具来快速制作APP图标，具体使用方法推荐观看B站UP主极客开发者的视频讲解</strong></span>：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=48479144&bvid=BV1Wb41137GT&cid=84902289&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>]]></content>
    
    
    <categories>
      
      <category>软件使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android Studio</tag>
      
      <tag>学习</tag>
      
      <tag>APK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio签名打包APK（详解）</title>
    <link href="/posts/20220219a1/"/>
    <url>/posts/20220219a1/</url>
    
    <content type="html"><![CDATA[<p>Android Studio（后面都简称AS）生成APK在安卓应用开发中是必不可少的一个环节，本篇文章记录如何将我们的程序打包成Apk文件，并且为我们的Apk签名！</p><span id="more"></span><h1 id="一、简单科普"><a href="#一、简单科普" class="headerlink" title="一、简单科普"></a>一、简单科普</h1><h2 id="1、为什么要打包？"><a href="#1、为什么要打包？" class="headerlink" title="1、为什么要打包？"></a>1、为什么要打包？</h2><p>apk文件就是一个包，打包就是要生成apk文件，有了apk别人才能安装使用。打包分debug版和release包，<span  style="color: #FF0033; "><strong>通常所说的打包指生成release版的apk</strong></span>；</p><ul><li><p><strong>Debug</strong>通常称为调试版本，通过一系列编译选项的配合，编译的结果通常包含调试信息，而且不做任何优化，以为开发 人员提供强大的应用程序调试能力。</p></li><li><p><strong>Release</strong>通常称为发布版本，是为用户使用的，一般客户不允许在发布版本上进行调试。所以不保存调试信 息，同时，它往往进行了各种优化，以期达到代码最小和速度最优。为用户的使用提供便利。</p></li></ul><p>release版的apk会比debug版的小，release版的还会进行混淆和用自己的keystore签名，以防止别人反编译后重新打包替换你的应用。 </p><blockquote><p>简单点说就是给你的apk发身份证，上户口，防止和你长的一样的人，假冒你。这里的apk身份证就是我们的“.jks”文件。所以这个jks文件很重要。 </p><p>如果你同一代码，生成两个jks文件打包，那就代表的是两个软件。</p></blockquote><h2 id="2、什么是签名，有什么用？"><a href="#2、什么是签名，有什么用？" class="headerlink" title="2、什么是签名，有什么用？"></a>2、什么是签名，有什么用？</h2><p>Android APP都需要我们用一个证书对应用进行数字签名，不然的话是无法安装到Android手机上的，平时我们调试运行到手机上时，是AS会自动用默认的密钥和证书来进行签名；</p><p>但是我们实际发布编译时，则不会自动签名，这个时候我们就需要进行手动签名了！ 为我们的APK签名有以下好处：</p><blockquote><ul><li><strong>应用程序升级：</strong>如果你希望用户无缝升级到新的版本，那么你必须用同一个证书进行签名。这是由于只有以同一个证书签名，系统才会允许安装升级的应用程序。如果你采用了不同的证书，那么系统会要求你的应用程序采用不同的包名称，在这种情况下相当于安装了一个全新的应用程序。如果想升级应用程序，签名证书要相同，包名称要相同！</li><li><strong>应用程序模块化：</strong> Android系统可以允许同一个证书签名的多个应用程序在一个进程里运行，系统实际把他们作为一个单个的应用程序，此时就可以把我们的应用程序以模块的方式进行部署，而用户可以独立的升级其中的一个模块。</li><li><strong>代码或者数据共享：</strong> Android提供了基于签名的权限机制，那么一个应用程序就可以为另一个以相同证书签名的应用程序公开自己的功能。以同一个证书对多个应用程序进行签名，利用基于签名的权限检查，你就可以在应用程序间以安全的方式共享代码和数据了。 不同的应用程序之间，想共享数据，或者共享代码，那么要让他们运行在同一个进程中，而且要让他们用相同的证书签名。 ————上述内容摘自：<a href="http://blog.csdn.net/fyh2003/article/details/6911967">android 为什么需要签名</a></li></ul></blockquote><h1 id="二、如何签名打包？"><a href="#二、如何签名打包？" class="headerlink" title="二、如何签名打包？"></a>二、如何签名打包？</h1><p>好的，因为我也是初学者，多渠道打包的方法以后再进行研究！本节只讲最简单的常规打包签名！</p><p>对了，上面说的在运行程序在AVD中调试时默认生成的apk在：<code>app/build/outputs/apk/debug</code>目录下！</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191439869.png"></p><p><strong>好了，现在正式开始演示如何签名打包APK：</strong></p><p>1、打开我们之前创建的项目helloworld，如果你不会创建新项目，可以看一下这篇文章：<a href="https://afengxz.github.io/posts/20220115a1/#4%E3%80%81%E6%96%B0%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE">Android Studio的安装和使用教程</a>；</p><p>点击导航栏的<strong>Build→Generate Signed Bundle / APK…</strong>；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191448101.png"></p><p>2、选择<strong>APK</strong>，点击<strong>Next</strong>；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191449004.png"></p><p>3、我们这是第一次打包，需要先创建一个签名文件key，点击<strong>Create new…</strong>，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191456122.png"></p><p>如果你之前已经创建过key了，就直接点击Choose existing…选择相应的文件即可；</p><p>4、可以看到以下界面，我给大家稍微标注了一下，点击右上角的文件夹图标；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191457384.png"></p><p>5、选择key的存放路径，以及自定义填写key的文件名；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191500470.png"></p><p>6、根据我上面的标注进行填写相关信息，可以将key密码和key别名密码设置为一样的，这样便于记忆，填写完成点击<strong>OK</strong>；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191501068.png"></p><p>7、如果出现这个弹窗，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191505461.png"></p><p>AS 似乎希望我们将我们的 key 从 JKS 专有格式迁移到PKCS12 格式，这时候你有两种选择：</p><p>（1）忽略不管，点击<strong>OK</strong>，直接进行第8步即可；</p><p>（2）既然AS单独出来这个弹窗建议我们，那我们就接受它的建议呗：</p><details black=""><summary> 点击此处 可展开具体操作步骤 </summary><div class="content"><p><p>①先把弹窗上的双引号内的指令：</p><p><code>keytool -importkeystore -srckeystore E:\Desktop\test\testkey.jks -destkeystore E:\Desktop\test\testkey.jks -deststoretype pkcs12</code></p><p>打出来放好（每个人的路径和文件名都一样，不用偷懒直接使用我的，注意替换），点击<strong>OK</strong>，然后关闭弹窗</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191625573.png" referrerpolicy="no-referrer" alt=""></p><p>②点击右上角的“X”号，把这个窗口也关闭</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191624084.png" referrerpolicy="no-referrer" alt=""></p><p>③点击AS下面的<strong>Terminal</strong>，会出来一个运行窗口，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191630530.png" referrerpolicy="no-referrer" alt=""></p><p>④复制我们刚刚第①步打出来的双引号里面的指令，Ctrl+V粘贴进去，然后回车</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191633535.png" referrerpolicy="no-referrer" alt=""></p><p>⑤输入我们之前设置的key文件的密码，然后回车</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191637059.png" referrerpolicy="no-referrer" alt=""></p><p>⑥看到提示，即表示迁移成功</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191638350.png" referrerpolicy="no-referrer" alt=""></p><p>⑦然后打开我们的key存放路径文件夹，我们在打包签名的时候，用上面的就行</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191640089.png" referrerpolicy="no-referrer" alt=""></p><p>⑧回到AS，继续打包操作</p>  <section style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);text-align: start;white-space: normal;height: 24em;overflow: auto;">    <p style="text-align: center;">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191448101.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191449004.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191647804.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">    </p>  </section>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);white-space: normal;text-align: center;">    <span style="font-size: 12px;color: rgb(136, 136, 136);">↕上下滑动查看更多↕</span>  </p>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;text-align: start;line-height: 0px;max-width: 100%;white-space: pre-wrap;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;">    <br>  </p><p>然后进行第8步；</p></p></div></details><p>8、到这一步，需要我们填入刚刚设置的key密码了，如果你觉得每次打包都要输入密码有点麻烦的话，这里可以勾选记住密码，然后点击<strong>Next</strong></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191508210.png"></p><p>9、选择<strong>release</strong>，下面两个都勾选上（至于为什么？感兴趣的可以去了解一下：<a href="https://www.jianshu.com/p/3a179acc7c4a">APK Signature Scheme v2 </a>），然后点击<strong>Finish</strong></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191509790.png"></p><p>10、当你看到AS的右下角出现这个提示时，说明你的APK已经生成了，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191517733.png"></p><p>11、你可以在AS的app下看到多了一个release的文件夹，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191522051.png"></p><p>或者你在找到<code>项目保存路径\项目名\app\release</code>文件夹</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/004/202202191522615.png"></p><p>里面有个apk文件，就是你刚刚签名生成的，下面你可以复制发到自己的手机上或者发给你的朋友，然后下载就能在手机上安装使用了。</p>]]></content>
    
    
    <categories>
      
      <category>软件使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android Studio</tag>
      
      <tag>学习</tag>
      
      <tag>APK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PicGo+GitHub/Gitee：你的最佳免费图床选择</title>
    <link href="/posts/20220130a1/"/>
    <url>/posts/20220130a1/</url>
    
    <content type="html"><![CDATA[<p>写博客怎么少的了图床呢？之前用的是SM.MS图床，不过它的速度越来越堪忧，其他小众的就怕跑路，阿里云OSS这种又用不起，现在我用的是Github图床和Gitee图床，它俩不仅免费而且稳定，可以说是最佳免费图床的选择。</p><span id="more"></span><h1 id="一、简单介绍"><a href="#一、简单介绍" class="headerlink" title="一、简单介绍"></a>一、简单介绍</h1><h2 id="1、图床"><a href="#1、图床" class="headerlink" title="1、图床"></a>1、图床</h2><p>图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p><h2 id="2、PicGo"><a href="#2、PicGo" class="headerlink" title="2、PicGo"></a>2、PicGo</h2><p>这是一款图片上传的工具，目前支持SM.MS图床、微博图床、七牛图床、腾讯云COS、阿里云OSS、Imgur、又拍云、<code>GitHub</code>、<code>Gitee</code>等图床，未来将支持更多图床。</p><p>神奇的PicGo解决问题的思路就是，将本地的文件，或者剪切板上面的截图发送图床，然后生成在线图片的链接，这样就可以让<code>Markdown</code>文档飞起来了，走到哪就可以用到哪。</p><p><strong>下载PicGo：</strong><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><blockquote><p>选择最新版本的2.3.1，但这个是内测版，推荐下载正式版2.3.0，稳定。</p></blockquote><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/03_2022-01-30.png"></p><p>安装过程我就不演示了，都是无脑“下一步”就行。</p><h1 id="二、PicGo-Gitee方案"><a href="#二、PicGo-Gitee方案" class="headerlink" title="二、PicGo+Gitee方案"></a>二、PicGo+Gitee方案</h1><div class="note note-secondary">            <p>优势：Gitee是国内的代码托管平台，免费而且速度快；<br>不足：虽然不限容量，但是有一个限制，即单张图片大小超过1MB就无法通过外链显示。</p>          </div><p>一般我们截的图都不会大于1MB的，所以问题不大！</p><p>接下来我们来操作一下如何配置Gitee图床：</p><h2 id="1、PicGo安装插件"><a href="#1、PicGo安装插件" class="headerlink" title="1、PicGo安装插件"></a>1、PicGo安装插件</h2><p>（1）先安装<a href="https://nodejs.org/zh-cn/">Node.js</a>，下载长期维护版的，没装的自己装一下，然后重启就行；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/04_2022-01-30.png"></p><p>（2）打开picgo，下载gitee插件，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/07_2021-11-25.png"></p><p>如下图所示，看到图床设置处有“Gitee”即是安装插件成功；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/05_2022-01-30.png"></p><h2 id="2、配置PicGo"><a href="#2、配置PicGo" class="headerlink" title="2、配置PicGo"></a>2、配置PicGo</h2><p>（1）新建gitee图床仓库：</p><p>没有用过gitee的，先注册gitee：<a href="https://gitee.com/">https://gitee.com/</a> 账号，注册完成后登录，右上角新建仓库，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/01_2022-01-29.png"></p><p>按照提示填写完成后，点击创建，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/03_2022-01-29.png"></p><p>（2）创建图床仓库完成，打开PicGo的gitee设置，进行填写：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/05_2022-01-29.png"></p><p>（3）配置token；</p><p>找到Gitee的设置，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/06_2022-01-29.png"></p><p>找到设置中的私人令牌，点击“生成新令牌”，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/07_2022-01-29.png"></p><p>按照提示填写信息，点击“提交”即可生成，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/08_2022-01-29.png"></p><p>复制令牌并“Ctrl+v”填入PicGo中，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/09_2022-01-29.png"></p><p>（4）PicGo中gitee设置注意：</p><ul><li><p>path：保存的文件夹路径，可填可不填，不填则默认保存在仓库的根目录下，填的话参考下图所示：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/11_2022-01-29.png"></p></li><li><p>customPath：提交消息，这一项和下一项customURL都不用管。在提交到gitee后，会显示提交消息，插件默认提交的是 “Upload 图片名 by picGo - 时间”。</p></li></ul><p>（5）最后不要忘记点“确定”，然后拖拽图片到PicGo“上传区”试试看是否配置成功：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/14_2022-01-29.png"></p><p>上传成功。</p><h1 id="三、PicGo-GitHub-jsDelivr方案"><a href="#三、PicGo-GitHub-jsDelivr方案" class="headerlink" title="三、PicGo+GitHub+jsDelivr方案"></a>三、PicGo+GitHub+jsDelivr方案</h1><p>我上面说了“一般我们截图的时候图片大小都不会超过1MB”，可有时候我们从网上下载的配图都是几MB甚至是几十MB的，尽管我们可以通过压缩图片的方式来减小图片大小，但凡事都有个例外；</p><p>如果我们的图片真的大于1MB了，Gitee图床就无法显示出来，这时候就需要用到GitHub图床方案了！</p><div class="note note-secondary">            <p>优势：GitHub是国外的代码托管平台，免费且不限制图片大小，外链都显示；<br>不足：GitHub在国内一直处于半墙的状态，访问速度特别慢。</p>          </div><p>虽然GitHub访问速度慢，但是我们可以用CDN来加速，所以问题还是不大！</p><p>接下来我们来操作一下如何配置GitHub图床：</p><p>（1）PicGo已经内置支持GitHub了，所以在配置GitHub图床时就不用额外安装插件了；</p><p>（2）新建GitHub图床仓库：</p><p>没有用过GitHub的，先注册GitHub：<a href="https://github.com/">https://github.com/</a> 账号，注册完成后登录，右上角新建仓库，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/15_2022-01-29.png"></p><p>按照提示填写完成后，点击”Create repository“创建，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/16_2022-01-29.png"></p><p>（3）创建图床仓库完成，打开PicGo的github设置，进行填写：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/17_2022-01-29.png"></p><p>（4）配置token：</p><p>如下图所示，找到token生成入口，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/19_2022-01-29.png"></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/20_2022-01-29.png"></p><p>按照提示填写信息，然后点击下面的“提交”即可生成，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/21_2022-01-29.png"></p><p>复制token并“Ctrl+v”填入PicGo中，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/23_2022-01-29.png"></p><p>（5）指定存储路径：即图片保存的文件夹路径，可填可不填，不填则默认保存在仓库的根目录下，填的话参考下图所示：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/06_2022-01-30.png"></p><p>（6）我们上面说了用CDN来加速，就是在这一步配置：</p><p><strong><a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%E5%90%8D/%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/用户名/图床仓库名/图片路径</a></strong>来加速图片，</p><p>如下图所示，在“设定自定义域名”栏填入：<code>https://cdn.jsdelivr.net/用户名/图床仓库名</code></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/25_2022-01-29.png"></p><p>（7）最后不要忘记点“确定”，然后拖拽图片到PicGo“上传区”试试看是否配置成功：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/07_2022-01-30.png"></p><h1 id="四、温馨提示"><a href="#四、温馨提示" class="headerlink" title="四、温馨提示"></a>四、温馨提示</h1><h2 id="1、注意事项"><a href="#1、注意事项" class="headerlink" title="1、注意事项"></a>1、注意事项</h2><p>在PicGo软件中，有个地方，叫“相册区”，</p>  <section style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);text-align: start;white-space: normal;height: 24em;overflow: auto;">    <p style="text-align: center;">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/003/202201302239568.png" data-type="png" data-w="666" style="margin-bottom: -10px;width: 1658px;" data-imgqrcoded="1">    </p>  </section>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);white-space: normal;text-align: center;">    <span style="font-size: 12px;color: rgb(136, 136, 136);">↕上下滑动查看更多↕</span>  </p>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;text-align: start;line-height: 0px;max-width: 100%;white-space: pre-wrap;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;">    <br>  </p><p>相册区里面的图片是本地数据，当我们使用PicGo的时间久了、上传的图片多了，这个本地的图片数据也多了，可能会造成PicGo软件有些卡顿，这时候我们就需要清空或者适当性的删除相册区里面的数据。</p><ul><li><p>正如上图PicGo官方所说，删除这个相册区里面的图片时，对于GitHub图床来说没有任何影响，因为这只是本地数据；</p></li><li><p><span  style="color: #FF0033; ">但是，对于Gitee图床来说，这个数据是同步（插件的原因），也就是说如果我们使用的是gitee图床，在删除PicGo相册区里面的图片时，Gitee平台上的图片也会被同步删除。</span><del>（别问我怎么知道的，这是我“血的历史教训”）</del></p><p>所以，<strong>如果你也在使用这个gitee-uploader 1.1.2插件的Gitee图床，在清理PicGo相册区时，切记：先把这个插件短暂性的禁用——然后重启应用——再清理相册区。</strong></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/202201302239417.png"></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/003/202201302240291.png"></p><p>清理完成后，再去重新启用插件就好。</p></li></ul><h2 id="2、使用说明"><a href="#2、使用说明" class="headerlink" title="2、使用说明"></a>2、使用说明</h2><p><strong>如果第一次使用PicGo，请参考应用使用<a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">快速上手</a>。遇到问题了还可以看看<a href="https://github.com/Molunerfinn/PicGo/blob/dev/FAQ.md">FAQ</a>以及被关闭的<a href="https://github.com/Molunerfinn/PicGo/issues?q=is:issue+is:closed">issues</a>。</strong></p>]]></content>
    
    
    <categories>
      
      <category>软件安装与配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PicGo</tag>
      
      <tag>GitHub</tag>
      
      <tag>Gitee</tag>
      
      <tag>图床</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio的安装和使用教程</title>
    <link href="/posts/20220115a1/"/>
    <url>/posts/20220115a1/</url>
    
    <content type="html"><![CDATA[<p><span  style="color: #FF0033; "><strong>Android studio  不支持中文路径。请确保你的电脑用户名非中文，另外安装路径和新建项目保存路径都必须是非中文。</strong></span></p><h1 id="一、Java-JDK安装与环境变量配置"><a href="#一、Java-JDK安装与环境变量配置" class="headerlink" title="一、Java JDK安装与环境变量配置"></a>一、Java JDK安装与环境变量配置</h1><h2 id="1、下载Java-JDK"><a href="#1、下载Java-JDK" class="headerlink" title="1、下载Java JDK"></a>1、下载Java JDK</h2><p>首先我们需要下载 java 开发工具包 JDK，jdk官网下载地址：<a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a>，在下载页面中根据自己的系统选择对应的版本，本文以 Window10 64位操作系统为例：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300010421.png"></p><h2 id="2、安装Java-JDK"><a href="#2、安装Java-JDK" class="headerlink" title="2、安装Java JDK"></a>2、安装Java JDK</h2><p>（1）双击下载好的JDK安装包，点击“下一步”；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300010605.png"></p><p>（2）选择jdk的安装路径，如果默认可以直接“下一步“，不过我一般习惯把软件装在D盘，请记住你的安装路径，后面要用到；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300010647.png"></p><p>（3）选择jre的安装路径，如果默认可以直接“下一步”，建议两个都安装在同一个java目录下的不同文件夹中（不能都直接安装在java的根目录下，jdk和jre安装在同一文件夹会出错）；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300011192.png"></p><p>（4）等待安装，安装完成，点击“关闭”；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300011747.png"></p><h2 id="3、配置环境变量"><a href="#3、配置环境变量" class="headerlink" title="3、配置环境变量"></a>3、配置环境变量</h2><p>（1）Java JDK安装完成后，右击”此电脑”，点击”属性”→”高级系统设置”→“环境变量”；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300011835.png"></p><p>（2）找到系统变量，点击“新建”，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300011217.png"></p><p>新建两个系统变量：</p><p>①<code>JAVA_HOME</code>：<code>D:\AS\Java\jdk1.8.0_311</code></p><p>这里把安装路径替换成你自己的</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300011889.png"></p><p>作用：它指向jdk的安装目录，Eclipse/NetBeans/Tomcat等软件就是通过搜索JAVA_HOME变量来找到并使用安装好的jdk。</p><p>②<code>CLASSPATH</code>：<code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code></p><p>注意不要忘记前面的点和中间的分号，且要在英文输入的状态下的分号和逗号。</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300012757.png"></p><p>作用：是指定类搜索路径，要使用已经编写好的类，前提当然是能够找到它们了，JVM就是通过CLASSPTH来寻找类的。我们需要把jdk安装目录下的lib子目录中的dt.jar和tools.jar设置到CLASSPATH中，当然，当前目录“.”也必须加入到该变量中。</p><p>（3）在系统变量中，找到Path环境变量，单击选中，点击“编辑”，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300012352.png"></p><p>打开新界面后，点击右侧的“新建”，新建两个变量：</p><p><code>%JAVA_HOME%\bin</code></p><p><code>%JAVA_HOME%\jre\bin</code></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300012054.png"></p><p>作用：指定命令搜索路径，在i命令行下面执行命令如javac编译java程序时，它会到PATH变量所指定的路径中查找看是否能找到相应的命令程序。我们需要把jdk安装目录下的bin目录增加到现有的PATH变量中，bin目录中包含经常要用到的可执行文件如javac/java/javadoc等待，设置好PATH变量后，就可以在任何目录下执行javac/java等工具了。</p><p>（4）测试环境，</p><p>①<code>Java</code></p><p>②<code>Javac</code></p><p>③<code>java -version</code></p><p>快捷键”Win+R“打开运行窗口，输入“cmd”回车</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300012118.png"></p><p>再依次输入上面三个量进行测试，</p>  <section style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);text-align: start;white-space: normal;height: 24em;overflow: auto;">    <p style="text-align: center;">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300012428.png" data-type="png" data-w="666" style="margin-bottom: -10px;width: 1658px;" data-imgqrcoded="1">    </p>  </section>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);white-space: normal;text-align: center;">    <span style="font-size: 12px;color: rgb(136, 136, 136);">↕上下滑动查看更多↕</span>  </p>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;text-align: start;line-height: 0px;max-width: 100%;white-space: pre-wrap;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;">    <br>  </p><p>若如图所示，显示版本信息，则说明Java JDK安装和环境变量配置成功。</p><h1 id="二、安装Android-Studio"><a href="#二、安装Android-Studio" class="headerlink" title="二、安装Android Studio"></a>二、安装Android Studio</h1><h2 id="1、下载Android-Studio"><a href="#1、下载Android-Studio" class="headerlink" title="1、下载Android Studio"></a>1、下载Android Studio</h2><p>Android Studio最新版官网下载地址：<a href="https://developer.android.google.cn/studio">https://developer.android.google.cn/studio</a></p><p>Android Studio历史版本官网下载地址：</p><p><a href="https://developer.android.google.cn/studio/archive">https://developer.android.google.cn/studio/archive</a></p><p>因为我之前上课的时候用的就是3.5.2版本，为了打开之前的项目文件，我这里还是以3.5.2版本为例：</p><p>打开第二个链接，点击同意一下它的条款，向下滑，找到3.5.2版本，点击下载；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300013893.png"></p><h2 id="2、关闭防火墙"><a href="#2、关闭防火墙" class="headerlink" title="2、关闭防火墙"></a>2、关闭防火墙</h2><p>为确保能安装成功，先短暂性的关闭防火墙，Android Studio安装完成，成功运行后再打开；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300013081.png"></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300013903.png"></p><h2 id="3、安装Android-Studio"><a href="#3、安装Android-Studio" class="headerlink" title="3、安装Android Studio"></a>3、安装Android Studio</h2><p>（1）双击打开下载好的安装包，点击“下一步”：</p>  <section style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);text-align: start;white-space: normal;height: 24em;overflow: auto;">    <p style="text-align: center;">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300013827.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300013827.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">    </p>  </section>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);white-space: normal;text-align: center;">    <span style="font-size: 12px;color: rgb(136, 136, 136);">↕上下滑动查看更多↕</span>  </p>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;text-align: start;line-height: 0px;max-width: 100%;white-space: pre-wrap;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;">    <br>  </p><p>（2）选择Android Studio的安装路径，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300014603.png"></p><p>（3）点击“Install”开始安装，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300014841.png"></p><p>下一步，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300014574.png"></p><p>完成，点击“Finish”，启动AS，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300014543.png"></p><p>（4）AS启动后，第一次安装的话选择第二个，不导入之前的设置，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300015047.png"></p><p>检测到你的电脑没有SDK而且你下载的android studio又是不带SDK的，不要慌，先点击“取消”，后面再安装，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300015454.png"></p><p>下一步，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300015403.png"></p><p>（5）选择第二个，自定义安装，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300015859.png"></p><p>（6）选择自己习惯的界面主题，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300015685.png"></p><p>（7）选择SDK的安装路径</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300015836.png"></p><p>内存的分配 ，不小于2G就可以，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300016288.png"></p><p>点击“Finish”开始下载安装SDK，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300016497.png"></p><p>看到提示安装成功，点击“Finish”完成；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300016527.png"></p><p>（8）如果你跟我一样，没有使用默认的SDK安装路径，这里需要在系统环境变量处再新建一个变量：</p><p><code>ANDROID</code>：<code>D:\AS\Android\SDK</code></p><p>记得替换成自己的SDK安装路径；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300022810.png"></p><h2 id="4、新建第一个项目"><a href="#4、新建第一个项目" class="headerlink" title="4、新建第一个项目"></a>4、新建第一个项目</h2><p>（1）双击运行已经安装的Android Studio，点击第一个，新建项目，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300016103.png"></p><p>（2）下一步，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300016669.png"></p><p>（3）按提示填写完成后，点击“Finish”创建，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300016328.png"></p><p>（4）首次进入页面比较慢，需要耐心等待，它还会自动下载gradle（下边的提示板里会不停的转圈，等待他转完）。</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300017202.png"></p><p>（5）等到提示板里全部打勾之后就可以了。</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300017959.png"></p><h2 id="5-1、下载AVD"><a href="#5-1、下载AVD" class="headerlink" title="5.1、下载AVD"></a>5.1、下载AVD</h2><blockquote><p>如果你不想用这个AVD，你可以跳过这第5.1部分，去选择配置第5.2部分——手机真机或者是安卓模拟器。</p></blockquote><p>（1）AVD的默认路径在C盘的用户文件下，如果你C盘够大，不需要更改的，可以跳过这个部分直接看下面，我这里以更改到D盘为例：</p><p>找到C盘目录下找到.android文件，将它剪切到D盘的某新建空目录下，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300017657.png"></p><p>剪切完成后，前往系统环境变量处新建一个变量：</p><p><code>ANDROID_SDK_HOME</code>：<code>D:\AS\Android\AVD</code></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300017222.png"></p><p>（2）找到这个手机图标，点击打开，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300017490.png"></p><p>（3）创建新设备；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018819.png"></p><p>（4）选择想要的模板类型，建议图中的两个，其他的我个人感觉有点丑，哈哈；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018724.png"></p><p>（5）首次创建需要先下载系统镜像，点击下载</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018252.png"></p><p>同意许可协议，下一步，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018209.png"></p><p>等待下载，下载完成，点击完成，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018360.png"></p><p>（6）选择下载好的系统镜像，点击下一步，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018128.png"></p><p>（6）根据自己的项目需求自行调整；</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018474.png"></p><h2 id="5-2、连接安卓模拟器或手机真机"><a href="#5-2、连接安卓模拟器或手机真机" class="headerlink" title="5.2、连接安卓模拟器或手机真机"></a>5.2、连接安卓模拟器或手机真机</h2><p>安卓模拟器有很多，我这里选择的是雷电模拟器：<a href="http://www.lsplayer.com/">http://www.lsplayer.com/</a>，因为目前它更新到了1.0.12仍是无广告干扰，而且使用方便，不需要配置adb命令，其他模拟器好像都需要需要，有想法的自行百度。</p><p>首先开启开发者模式：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300018172.png"></p><p>打开USB调试：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300019940.png"></p><p>然后在AS里面就可以看到了</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300019237.png"></p><p>手机真机也是和上面配置雷神模拟器的方法步骤一样，不过再开启开发者模式和打开USB调试后，需要插上数据线连接电脑。</p><h2 id="6、运行代码，进行最后的测试"><a href="#6、运行代码，进行最后的测试" class="headerlink" title="6、运行代码，进行最后的测试"></a>6、运行代码，进行最后的测试</h2><p>在下图中①处根据自己的习惯选择好后，点击②处的三角形开始运行程序：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300019296.png"></p><p>下面是我分别在三个设备的运行结果：</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300019997.png"></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300019902.png"></p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300019169.png"></p><p>到这里，说明Android Studio的安装已经全部完成了！</p><p>最后，记得把刚刚关闭的防火墙恢复开启。</p><h1 id="三、Android-Studio的完全卸载"><a href="#三、Android-Studio的完全卸载" class="headerlink" title="三、Android Studio的完全卸载"></a>三、Android Studio的完全卸载</h1><h2 id="1、卸载Android-Studio"><a href="#1、卸载Android-Studio" class="headerlink" title="1、卸载Android Studio"></a>1、卸载Android Studio</h2><p>（1）可以直接使用Win10自带的应用卸载功能：</p><p>右键左下角Windows图标，单击选择“应用和功能”，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300020096.png"></p><p>找到Android Studio，点击“卸载”，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300020720.png"></p><p>（2）也可以卸载工具<a href="https://geekuninstaller.com/download">Geek</a>来卸载：</p><p>Geek是个便携式软件，不需要安装，下载后双击打开即可，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300029815.png"></p><p>找到Android Studio，右键选择卸载，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201310946741.png"></p><p>（3）根据卸载提示进行卸载；</p>  <section style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);text-align: start;white-space: normal;height: 24em;overflow: auto;">    <p style="text-align: center;">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300036815.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300036816.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300036817.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">      <img class="rich_pages wxw-img" data-ratio="1.4654654654654655" src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300036818.png" data-type="png" data-w="666" style="margin-bottom: 10px;width: 1658px;" data-imgqrcoded="1">    </p>  </section>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;color: rgb(0, 0, 0);white-space: normal;text-align: center;">    <span style="font-size: 12px;color: rgb(136, 136, 136);">↕上下滑动查看更多↕</span>  </p>  <p style="font-family: &quot;Microsoft YaHei&quot;;font-size: medium;letter-spacing: 2px;text-align: start;line-height: 0px;max-width: 100%;white-space: pre-wrap;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;">    <br>  </p><p>（5）如果是用第三方卸载工具Geek的话，还有一步，清理卸载残余（使用win10自带卸载功能的这里不用管，看下一部分）</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300043779.png"></p><h2 id="2、删除Android-Studio的相关配置文件"><a href="#2、删除Android-Studio的相关配置文件" class="headerlink" title="2、删除Android Studio的相关配置文件"></a>2、删除Android Studio的相关配置文件</h2><p>（1）前往Android Studio安装路径下，看看是否还有这些文件，选中删除，</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300020603.png"></p><p>（2）前往“C盘\用户\用户名”路径下，删除以下三个文件</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300021360.png"></p>]]></content>
    
    
    <categories>
      
      <category>软件安装与配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android Studio</tag>
      
      <tag>Java</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Blog</title>
    <link href="/posts/20220101a1/"/>
    <url>/posts/20220101a1/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到<a href="https://afengxz.github.io/">阿峰学长的个人博客</a>！这是我的第一篇文章。</p><blockquote><p>从2022年1月1日开始抒写我的博客新篇章，记录我人生的轨迹在博客，开启我的新时代记忆。</p></blockquote><h1 id="一、我为什么要写博客？"><a href="#一、我为什么要写博客？" class="headerlink" title="一、我为什么要写博客？"></a>一、我为什么要写博客？</h1><p>其实原因很简单，就是在学习中遇到解决不了的难题，上网查阅资料时发现别人的博客页面超酷（请不要嘲笑我，我也才接触互联网，很多东西不是很懂），就有一种崇拜的心理，要是我也能有这样的博客多好啊！翻看了很多博客平台；有GitHub、网易、新浪、CSND、博客园。说下GitHub，GitHub的博客页面确实是最好的，很多功能都能根据自己个性化定义，而且是免费的，感觉非常适合我这种学生党折腾，于是我就选择了GitHub Pages，来搭建一个属于我自己的世界。</p><h1 id="二、写博客的初衷是什么？"><a href="#二、写博客的初衷是什么？" class="headerlink" title="二、写博客的初衷是什么？"></a>二、写博客的初衷是什么？</h1><p>把现在遇到的问题和解决方法记录在自己的博客上，方便日后工作用到的时候拿来就用，不用再去搜索别人的解决方案，一下子搜到N个千篇一律的结果，然后一个一个再去验证，很浪费时间，很降低工作效率。</p><h1 id="三、写博客能给我带来什么？"><a href="#三、写博客能给我带来什么？" class="headerlink" title="三、写博客能给我带来什么？"></a>三、写博客能给我带来什么？</h1><h2 id="1、巩固学习"><a href="#1、巩固学习" class="headerlink" title="1、巩固学习"></a>1、巩固学习</h2><p>用博客记录学习中、生活中所遇到的问题以及解决的方法，加强自己学习知识的能力，当别人问起问题时刚好你也理解问题的内涵，而可以用自己理解的方式去表述出来，写博客的过程，是将自己变成一个老师，将自己所学的心得分享给他人（你都能当老师教别人了，用自己的话术去表达了，这才是真正的理解，学会了）；</p><h2 id="2、提升思维写作能力"><a href="#2、提升思维写作能力" class="headerlink" title="2、提升思维写作能力"></a>2、提升思维写作能力</h2><p>有时候脑子不用真的会生锈，长时不用脑去思考问题的人思维能力会变得迟钝，经常写作能提高自己的写作水平，人的思维能力提升都是靠日积月累的，不是谁生下来就有牛顿的思维；</p><h2 id="3、给人生留点痕迹"><a href="#3、给人生留点痕迹" class="headerlink" title="3、给人生留点痕迹"></a>3、给人生留点痕迹</h2><p>人的记忆虽然不像鱼，但是长时间不去回顾的话记忆也是会随着时间推移慢慢遗忘，都说“好记性不如烂笔头”，人的记忆是永远比不了白纸黑字来得真实。有句话是这么说的，成长就是不断认识到，过去的自己是个傻逼的过程，所以我们还是要写博客，就当自己每天写写日记，记录生活中的一些事一些物一些人，留在日后自己回望起曾经还是别有一番余味，因此尽量在人生的轨迹上也留下一点痕迹吧；</p><h2 id="4、学习交流知识分享"><a href="#4、学习交流知识分享" class="headerlink" title="4、学习交流知识分享"></a>4、学习交流知识分享</h2><p>我发表的博客，别人看了之后可以评论发表意见，如果有什么不足的地方可以及时发现，也可以看别人的博客，互相学习交流。如果自己写的博客某天帮助他人解决了工作中或生活中的问题，你是不是也帮助了他人学习成长，知识都是通过分享学习的，就像老师教我们一样，正所谓“授人予鱼、不如授人予渔”；</p><h2 id="5、培养写作习惯"><a href="#5、培养写作习惯" class="headerlink" title="5、培养写作习惯"></a>5、培养写作习惯</h2><p>“习惯成自然”，习惯是个很可怕的东西，一旦养成之后就很难戒掉，经常写作养成习惯后你就会享受写作中的那种快感，养成一个良好的习惯真的非常重要，但是生活中的一些恶习我们还是尽早戒掉吧！不然人生短短数十载，不能因为恶习在人生道路上留下阴影；</p><h2 id="6、帮助自己"><a href="#6、帮助自己" class="headerlink" title="6、帮助自己"></a>6、帮助自己</h2><p>记录分享看似是帮助别人的事情，但我觉得更多是为了帮助自己（记录学习中遇到的问题，不断完善和提升自己），因为通过分享，帮助了别人，通过别人的肯定，自己得到了快乐；另一方面，如果有不足之处，别人也会帮你指出甚至给出完善的意见，帮助完善提高自己；</p><h2 id="7、为未来铺路"><a href="#7、为未来铺路" class="headerlink" title="7、为未来铺路"></a>7、为未来铺路</h2><p>现在记录的这些东西，自己日后多多少少都能用到的，虽然你现在遇到的问题，在解决后记忆能保存一段时间，但一些东西不常用的话，迟早会忘记的，或者问题解决方案比较复杂，不是简单一次就能记住的；</p><h2 id="8、一点点虚荣心"><a href="#8、一点点虚荣心" class="headerlink" title="8、一点点虚荣心"></a>8、一点点虚荣心</h2><p>当你的同学或者朋友遇到问题时，在网上一搜索结果是你写的文章，这种感觉是不是很好，你是不是有那么一丢丢的自豪感呢？觉得自己很牛逼，哈哈 ^~~^（又开始白日做梦，该醒醒了）。</p><p><img src="https://gitee.com/afengxz/images/raw/master/blog/001/202201300045798.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>生活感悟</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>comment</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>闲言碎语</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p style="text-align:center"><b><font size="5px">记录自己不时冒出的一句话想法</font></b></p>]]></content>
    
  </entry>
  
  
  
</search>
